{"ref":"67a00111-e173-4591-96d9-33dcfef8244a","content":"{\"version\":1,\"machineId\":\"46e1da9a-9442-458d-96c6-2bd05ace7a27\",\"content\":\"{\\\"js.code-snippets\\\":\\\"{\\\\n\\\\t// @Note: Function JS\\\\n\\\\t// fn\\\\n\\\\t\\\\\\\"Create a normal function\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"fn\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"${1:async} function ${2:fnName} (${3:params}){\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"   try{\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"    $4\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"   }catch(error){\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"   }\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create a function\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// afn\\\\n\\\\t\\\\\\\"Create an arrow function\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"afn\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"const ${1:fnName} = (${2:params}) => {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  try {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"    $3\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  } catch (error) {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  }\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"};\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create a arrow function\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// @Note: Jquery\\\\n\\\\t// jq\\\\n\\\\t\\\\\\\"Make a selector\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"jq\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"$('$1').$2\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make a selector\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// jqt\\\\n\\\\t\\\\\\\"Make a this selector\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"jqt\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"$(this).$1\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make a selector\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// snjq\\\\n\\\\t\\\\\\\"Create snippet jquery\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"snjq\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"/// <reference path=\\\\\\\\\\\\\\\"D:\\\\\\\\\\\\\\\\tips\\\\\\\\\\\\\\\\typings\\\\\\\\\\\\\\\\jquery\\\\\\\\\\\\\\\\globals\\\\\\\\\\\\\\\\jquery\\\\\\\\\\\\\\\\index.d.ts\\\\\\\\\\\\\\\" />\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create snippet jquery\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// @Note: ExpressJS Snippets\\\\n\\\\t// exfn\\\\n\\\\t\\\\\\\"Make Express Fully Function\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"exfn\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"const ${1:fnName} = (req, res, next) => {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  try {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"    $2\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  } catch (${3:error}) {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"    \\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  }\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make Express Fully Function\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// eexfn\\\\n\\\\t\\\\\\\"Make Express Fully Function And Export\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"eexfn\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"exports.${1:fnName} = ${2:async} (${3:req, res, next}) => {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  try {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"    $5\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  } catch (error) {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"    console.error('$4 ERROR: ', error);\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"    return res.status(500).json({ message: 'Lỗi dịch vụ, thử lại sau' });\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  }\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make Express Fully Function And Export\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// mmodel\\\\n\\\\t\\\\\\\"Create model with mongoose\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"mmodel\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"const mongoose = require('mongoose');\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"const Schema = mongoose.Schema;\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"const ${1:name}Schema = new Schema({\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  $5\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"});\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"const $2${1:Name}Model = mongoose.model('$2${1:name}', ${1:name}Schema, '${1:name}s');\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"module.exports = $2${1:Name}Model;\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create model with mongoose\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// api\\\\n\\\\t\\\\\\\"Make Import api express\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"api\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"const ${1:name}${2:Api} = require('express').Router();\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"const ${1:name}Controller = require('../controllers/${1:name}.controller');\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"$3\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"module.exports = ${1:name}${2:Api};\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make route/api express\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// route\\\\n\\\\t\\\\\\\"Make Import route express\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"rout\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"const ${1:name}${2:Route} = require('express').Router();\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"const ${1:name}Controller = require('../controllers/${1:name}.controller');\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"$3\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"module.exports = ${1:name}${2:Route};\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make route express\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// r200\\\\n\\\\t\\\\\\\"Response Success with status 200\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"r200\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"return res.status(200).json(${1:data});\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Response Success with status 200\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// rtEx\\\\n\\\\t\\\\\\\"Response with status code\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"rtEx\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"return res.status($1).json({$2});\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Response with status code\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// rer\\\\n\\\\t\\\\\\\"Return Error Express\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"rer\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"console.error('$1 ERROR: ', error);\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"return res.status(500).json({ message: 'Lỗi dịch vụ, thử lại sau' });\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Return Error Express\\\\\\\"\\\\n\\\\t}\\\\n}\\\\n\\\",\\\"scss.code-snippets\\\":\\\"{\\\\n\\\\t// hov\\\\n\\\\t\\\\\\\"create hover active\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"hov\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"&:hover, &:active {$1}\\\\\\\"]\\\\n\\\\t},\\\\n\\\\n\\\\t// med\\\\n\\\\t\\\\\\\"create media screen\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"med\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"@media only screen and (${1:max}-width: $2px){ $3 }\\\\\\\"]\\\\n\\\\t},\\\\n\\\\n\\\\t// csscmt\\\\n\\\\t\\\\\\\"create a css block comment\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"csscmt\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"// ----------- ${1:comment} -------------\\\\\\\"]\\\\n\\\\t}\\\\n}\\\\n\\\",\\\"utils.code-snippets\\\":\\\"{\\\\n\\\\t\\\\\\\"Random an image\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"rimg\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"https://picsum.photos/${1:200}/${2:200}\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Random an image\\\\\\\"\\\\n\\\\t}\\\\n}\\\\n\\\",\\\"react.code-snippets\\\":\\\"{\\\\n\\\\t// @Note: ----------  ReactJS ----------\\\\n\\\\t// rfce\\\\n\\\\t\\\\\\\"Create a functional component with file name\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"rfce\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"import React from 'react';\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"function ${1:${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}}(props) {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  return <${2:div}>$3</div>;\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"export default $1;\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create a functional component\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// drfce\\\\n\\\\t\\\\\\\"Create a functional component with folder name\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"drfce\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"import React from 'react';\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"function ${1:${TM_DIRECTORY/^.+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\(.*)$/${1:/capitalize}/}}(props) {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  return <${2:div}>$3</div>;\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"export default $1;\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create a functional component with folder name\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// rlazy\\\\n\\\\t\\\\\\\"Make a react lazy component\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"rlazy\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"const $1 = React.lazy(() => import('${2:pages}/$1'));\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make a react lazy\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// dprop\\\\n\\\\t\\\\\\\"Create default props\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"dprop\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"$1.defaultProps = {\\\\\\\", \\\\\\\"  $2\\\\\\\", \\\\\\\"}\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create default props\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// ddprop\\\\n\\\\t\\\\\\\"Create default props with folder name\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"ddprop\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"${1:${TM_DIRECTORY/^.+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\(.*)$/${1:/capitalize}/}}.defaultProps = {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  $2\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create default props with folder name\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// @Note: ----------  Hook ----------\\\\n\\\\n\\\\t// useRef\\\\n\\\\t\\\\\\\"Create useRef()\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"useRef\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"const ${1:ref} = useRef(${2:null});\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create useRef()\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// useState\\\\n\\\\t\\\\\\\"Create useState()\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"useState\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState(${3:value})\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create useState()\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// useEffect\\\\n\\\\t\\\\\\\"Create useEffect()\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"useEffect\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"useEffect(() => {\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  $3\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  return () => { ${2:cleanup} };\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}, [${1:dependencies}]);\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create useEffect()\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// useDispatch\\\\n\\\\t\\\\\\\"Create useDispatch()\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"useDispatch\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"const dispatch = useDispatch(${1:function});\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create useDispatch()\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// useSelector\\\\n\\\\t\\\\\\\"Create useSelector()\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"useSelector\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"const ${1:selector} = useSelector(state => state.$1);\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create useSelector()\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// useHistory\\\\n\\\\t\\\\\\\"Create useHistory()\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"useHistory\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"const history = useHistory();\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create useHistory()\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// @Note: ----------  Redux, Redux toolkit ----------\\\\n\\\\n\\\\t// slredux\\\\n\\\\t\\\\\\\"Create a slice in redux toolkit\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"slredux\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"import { createSlice } from '@reduxjs/toolkit';\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"const $1 = createSlice({\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  name: '$2',\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  initialState: { $3 },\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  reducers: { $4 },\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"});\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"const { reducer, actions } = $1;\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"export const {$5} = actions;\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"export default reducer;\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create a slice in redux toolkit\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// @Note: ----------  Material UI ----------\\\\n\\\\n\\\\t// stl\\\\n\\\\t\\\\\\\"Make style component with MUI\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"stl\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"import { makeStyles } from '@material-ui/core/styles';\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"export default makeStyles((${1:theme}) => ({\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"  $2\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}));\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make style component with MUI\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// ustl\\\\n\\\\t\\\\\\\"Import use style component with MUI\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"ustl\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"import useStyle from './style';\\\\\\\", \\\\\\\"const classes = useStyle();\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Import use style component with MUI\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// ctstl\\\\n\\\\t\\\\\\\"Make a class name & template string with style component MUI\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"ctstl\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"className={`${classes.$1} $2`}\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Make a class name with style component MUI\\\\\\\"\\\\n\\\\t},\\\\n\\\\n\\\\t// shov\\\\n\\\\t\\\\\\\"Create a hover, active\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"mhov\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"'&:hover, &:active':{$1}\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Create a hover, active\\\\\\\"\\\\n\\\\t}\\\\n}\\\\n\\\",\\\"test.code-snippets\\\":\\\"{\\\\n\\\\t// @Note: ---------- Mocha, chai ----------\\\\n}\\\\n\\\",\\\"common.code-snippets\\\":\\\"{\\\\n\\\\t\\\\\\\"Create mapping vim\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"m\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"{\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\"before\\\\\\\\\\\\\\\": [\\\\\\\\\\\\\\\"$1\\\\\\\\\\\\\\\"],\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\"after\\\\\\\\\\\\\\\": [\\\\\\\\\\\\\\\"$2\\\\\\\\\\\\\\\"]\\\\\\\", \\\\\\\"},\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"\\\\\\\"\\\\n\\\\t},\\\\n\\\\t\\\\\\\"Create mapping vim a\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"mc\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\\\\"{\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\"before\\\\\\\\\\\\\\\": [\\\\\\\\\\\\\\\"$1\\\\\\\\\\\\\\\"],\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\"commands\\\\\\\\\\\\\\\": [\\\\\\\\\\\\\\\"$2\\\\\\\\\\\\\\\"]\\\\\\\", \\\\\\\"},\\\\\\\"],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"\\\\\\\"\\\\n\\\\t}\\\\n}\\\\n\\\"}\"}"}